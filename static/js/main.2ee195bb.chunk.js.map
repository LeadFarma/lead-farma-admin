{"version":3,"sources":["pages/Product/product-list.js","pages/Product/product-create-or-update.js","config/constants.js","services/data-provider.js","App.js","serviceWorker.js","index.js"],"names":["CustomActions","basePath","CardActions","CreateButton","RefreshButton","ProductList","props","List","bulkActionButtons","title","actions","Datagrid","rowClick","TextField","source","label","EditButton","DeleteButton","CustomToolbar","Toolbar","SaveButton","redirect","ProductCreateOrUpdate","id","Edit","Create","SimpleForm","toolbar","BooleanInput","TextInput","ReferenceInput","reference","SelectInput","optionText","config","BASE_URL","Axios","defaults","headers","common","localStorage","getItem","convertHTTPResponse","response","type","resource","params","data","GET_LIST","map","value","_id","total","length","GET_ONE","console","log","UPDATE","CREATE","DELETE","previousData","method","options","queryStringParameters","pagination_page","pagination","page","pagination_perPage","perPage","sort_field","sort","field","sort_order","order","filter_field","Object","keys","filter","filter_value","values","forEach","key","GET_MANY","entity_id","body","Error","convertDataRequestToHTTP","get","then","put","catch","error","post","delete","App","Admin","dataProvider","Resource","name","list","edit","ProductCreateOrEdit","create","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ee195bb.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Datagrid,\n  List,\n  TextField,\n  // FunctionField,\n  DeleteButton,\n  EditButton,\n  CardActions,\n  CreateButton,\n  RefreshButton\n} from \"react-admin\";\nimport \"moment-timezone\";\n// import Moment from \"react-moment\";\nimport \"moment/locale/pt-br\";\n// import CustomDelete from \"../../components/CustomDelete/CustomDelete\";\n\nconst CustomActions = ({ basePath }) => (\n  <CardActions>\n    <CreateButton basePath={basePath} />\n    <RefreshButton />\n  </CardActions>\n);\n\nconst ProductList = props => {\n  return (\n    <List\n      bulkActionButtons={false}\n      title=\"Produtos\"\n      {...props}\n      actions={<CustomActions />}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"id\" label=\"Produto(ID)\" />\n        <TextField source=\"name\" label=\"Nome\" />\n        <TextField source=\"description\" label=\"Descrição\" />\n        <TextField source=\"category.name\" label=\"Categoria\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default ProductList;\n","import React from \"react\";\nimport {\n  TextInput,\n  BooleanInput,\n  Create,\n  SimpleForm,\n  Toolbar,\n  SaveButton,\n  Edit,\n  SelectInput,\n  ReferenceInput\n} from \"react-admin\";\n// import Select from \"../../components/Select/Select\";\n\n// import Upload from \"../../components/Upload/Upload\";\n// import DateInput from \"../../components/DateInput/DateInput\";\n// import { getUrl } from \"../../services/file.service\";\n// import TransferList from \"../../components/TransferList/TransferList\";\n\nconst CustomToolbar = props => {\n  return (\n    <Toolbar {...props}>\n      <SaveButton redirect={\"list\"} />\n    </Toolbar>\n  );\n};\n\nconst ProductCreateOrUpdate = props => {\n  const CreateOrEdit = props => {\n    if (props.id) return <Edit title=\"Editar Produto\" {...props} />;\n    return <Create title=\"Criar Produto\" {...props} />;\n  };\n\n  return (\n    <CreateOrEdit title=\"Produto\" {...props}>\n      <SimpleForm\n        toolbar={<CustomToolbar {...props} />}\n        // initialValues={{ date: new Date() }}\n      >\n        {/* <Upload source=\"file_id\" sourceName={\"file_name\"} getUrl={getUrl} /> */}\n        <BooleanInput source=\"blackstripe\" label=\"Tarja Preta\" />\n        <TextInput source=\"name\" label=\"Nome\" />\n        <TextInput source=\"description\" label=\"Descrição\" />\n        <TextInput source=\"ean13\" label=\"Código de barras\" />\n        <TextInput source=\"image\" label=\"Imagem\" />\n        <ReferenceInput\n          label=\"Categoria\"\n          source=\"category_id\"\n          reference=\"categories\"\n        >\n          <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n        {/* <SelectInput\n          source=\"category_id\"\n          choices={categories}\n          translateChoice={false}\n        /> */}\n        {/* <DateInput source=\"date\" label=\"Data\" /> */}\n        {/* <TransferList\n            source=\"allowed_franchises\"\n            items={users}\n            itemsSelected=\"allowed_franchises\"\n            defa\n          /> */}\n      </SimpleForm>\n    </CreateOrEdit>\n  );\n};\n\nexport default ProductCreateOrUpdate;\n","const STAGES = {\n  dev: {\n    BASE_URL: \"https://lead-api-express-dev.herokuapp.com/api/v1/\"\n  },\n  stg: {\n    BASE_URL: \"https://lead-api-express-dev.herokuapp.com/api/v1/\"\n    // BASE_URL: \"http://leadfarma.com.br/api/v1/\"\n  },\n  prd: {\n    BASE_URL: \"https://lead-api-express-dev.herokuapp.com/api/v1/\"\n  }\n};\n\nconst env = process.env.REACT_APP_STAGE || \"dev\";\nconst config = STAGES[env];\n\nexport default config;\n","import { CREATE, GET_LIST, GET_ONE, GET_MANY, UPDATE, DELETE } from \"ra-core\";\nimport config from \"../config/constants\";\nimport Axios from \"axios\";\n\nexport default () => {\n  Axios.defaults.headers.common[\"Authorization\"] =\n    \"Bearer \" + localStorage.getItem(\"token\");\n  const convertDataRequestToHTTP = (type, resource, params) => {\n    let options = { response: true, queryStringParameters: {} };\n    let method;\n\n    switch (type) {\n      case GET_LIST: {\n        const queryStringParameters = {\n          pagination_page: params.pagination.page,\n          pagination_perPage: params.pagination.perPage,\n          sort_field: params.sort.field,\n          sort_order: params.sort.order,\n          filter_field: Object.keys(params.filter)[0],\n          filter_value: Object.values(params.filter)[0]\n        };\n\n        Object.keys(queryStringParameters).forEach(key => {\n          if (queryStringParameters[key] && queryStringParameters[key] !== \"id\")\n            options.queryStringParameters[key] = queryStringParameters[key];\n        });\n\n        method = \"GET\";\n        break;\n      }\n      case GET_ONE: {\n        method = \"GET\";\n        break;\n      }\n      case GET_MANY: {\n        method = \"GET\";\n        break;\n      }\n      case UPDATE: {\n        options = {\n          ...params.data,\n          entity_id: params.data.id\n        };\n        delete options.id;\n        method = \"PUT\";\n        break;\n      }\n      case CREATE: {\n        options = params.data;\n        method = \"POST\";\n        break;\n      }\n      case DELETE: {\n        options.body = params.data;\n        method = \"DELETE\";\n        break;\n      }\n      default:\n        throw new Error(`Unsupported fetch action type ${type}`);\n    }\n    return { method, options };\n  };\n\n  const convertHTTPResponse = (response, type, resource, params) => {\n    const data = response.data.data;\n\n    switch (type) {\n      case GET_LIST:\n        // if (!response.headers.hasOwnProperty(\"content-range\")) {\n        //   throw new Error(\n        //     \"The Content-Range header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare Content-Range in the Access-Control-Expose-Headers header?\"\n        //   );\n        // }\n        return {\n          data: data.map(value => ({ id: value._id, ...value })),\n          total: data.length\n          // total: parseInt(\n          //   response.headers[\"content-range\"].split(\"/\").pop(),\n          //   10\n          // )\n        };\n      case GET_ONE:\n        console.log(response);\n        return {\n          data: { id: data._id, ...data }\n        };\n      case UPDATE:\n        return { data: { ...data, id: data._id } };\n      case CREATE:\n        return { data: { ...data, id: data._id } };\n      case DELETE:\n        return { data: { previousData: params.data, id: params.id } };\n      default:\n        return { data: data.data };\n    }\n  };\n\n  return (type, resource, params) => {\n    const { method, options } = convertDataRequestToHTTP(\n      type,\n      resource,\n      params\n    );\n    const id = params.id ? \"/\" + params.id : \"\";\n    options.response = true;\n\n    switch (method) {\n      case \"GET\":\n        return Axios.get(\n          config.BASE_URL + resource + id,\n          options\n        ).then(response =>\n          convertHTTPResponse(response, type, resource, params)\n        );\n      case \"PUT\":\n        return Axios.put(config.BASE_URL + resource + id, options)\n          .then(response =>\n            convertHTTPResponse(response, type, resource, params)\n          )\n          .catch(error => console.log(\"ERROR PUT :: \", error));\n      case \"POST\":\n        return Axios.post(config.BASE_URL + resource, options).then(response =>\n          convertHTTPResponse(response, type, resource, params)\n        );\n      case \"DELETE\":\n        return Axios.delete(\n          config.BASE_URL + resource + id,\n          options\n        ).then(response =>\n          convertHTTPResponse(response, type, resource, params)\n        );\n      default:\n        throw new Error(\"Método não encontrado\");\n    }\n  };\n};\n","import React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\n\nimport ProductList from \"./pages/Product/product-list\";\nimport ProductCreateOrEdit from \"./pages/Product/product-create-or-update\";\n\nimport \"./style.scss\";\nimport dataProvider from \"./services/data-provider\";\n// import authProvider from \"./services/auth-provider\";\n\nfunction App() {\n  return (\n    <Admin dataProvider={dataProvider()}>\n      {/* <Admin dataProvider={dataProvider()} authProvider={authProvider}> */}\n      <Resource\n        name=\"products\"\n        list={ProductList}\n        edit={ProductCreateOrEdit}\n        create={ProductCreateOrEdit}\n        // show={ConcursoShow}\n      />\n      <Resource name=\"categories\" />\n      {/* <Resource\n          name=\"user\"\n          list={UserList}\n          edit={UserEdit}\n          show={UserShow}\n          create={UserCreate}\n        />\n      */}\n    </Admin>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}